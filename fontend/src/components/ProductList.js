
// export default ProductList;
// src/components/ProductList.js
import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import { getProduct } from "../services/contractService.js";
import { getImageByTokenId } from "../services/api.js";
import { contractAddress, contractABI } from "../constants/config.js";
import { getContract } from "../services/web3Service.js"; // üîß b·ªè getWeb3 v√¨ kh√¥ng d√πng
import { QRCodeCanvas } from "qrcode.react";
import "./ProductList.css";

const ProductList = () => {
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");

  useEffect(() => {
    const fetchProducts = async () => {
      setLoading(true);
      setError("");
      try {
        const contract = getContract(contractABI, contractAddress); // ‚úÖ kh√¥ng c·∫ßn web3
        const productCounter = await contract.methods.productCounter().call();
        console.log("Product counter:", productCounter);
        const productList = [];

        for (let i = 1; i <= productCounter; i++) {
          const product = await getProduct(i);
          const imageData = await getImageByTokenId(i);
          productList.push({
            tokenId: i,
            ...product,
            image: imageData.ipfsUrl,
          });
        }

        setProducts(productList);
      } catch (err) {
        console.error("Error fetching products:", err);
        setError("Kh√¥ng th·ªÉ t·∫£i danh s√°ch s·∫£n ph·∫©m. Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi MetaMask v√† th·ª≠ l·∫°i.");
      } finally {
        setLoading(false);
      }
    };

    fetchProducts();
  }, []);

  return (
    <div className="product-list-container">
      <h3 className="product-list-title">Danh s√°ch s·∫£n ph·∫©m</h3>
      {error && <div className="error-message">{error}</div>}
      {loading ? (
        <p>ƒêang t·∫£i danh s√°ch s·∫£n ph·∫©m...</p>
      ) : products.length > 0 ? (
        <ul className="product-list">
          {products.map((product) => (
            <li key={product.tokenId} className="product-item">
              <p><strong>Token ID:</strong> {product.tokenId}</p>
              <p><strong>T√™n s·∫£n ph·∫©m:</strong> {product.name}</p>
              <p><strong>Ngu·ªìn g·ªëc:</strong> {product.origin}</p>
              <p><strong>Ph∆∞∆°ng ph√°p s·∫£n xu·∫•t:</strong> {product.productionMethod}</p>
              <p><strong>Ch·ª©ng nh·∫≠n:</strong> {product.certification}</p>
              <p><strong>Nh√† s·∫£n xu·∫•t:</strong> {product.producer}</p>
              <p>
                <strong>C√°c b∆∞·ªõc chu·ªói cung ·ª©ng:</strong>{" "}
                {product.supplyChainSteps?.length > 0
                  ? product.supplyChainSteps.join(", ")
                  : "Ch∆∞a c√≥"}
              </p>
              <div className="product-qr-code">
                <QRCodeCanvas value={product.image || product.tokenId} size={100} />
                <p>Qu√©t m√£ QR ƒë·ªÉ xem ·∫£nh s·∫£n ph·∫©m tr√™n Pinata</p>
              </div>
              <Link to={`/product/${product.tokenId}`} className="view-product-btn">
                Xem chi ti·∫øt
              </Link>
            </li>
          ))}
        </ul>
      ) : (
        <p>Ch∆∞a c√≥ s·∫£n ph·∫©m n√†o.</p>
      )}
    </div>
  );
};

export default ProductList;
